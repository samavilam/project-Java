
	/* Samantha Avila de Medeiros
	 * ID: 3125216
	 * Date of submission:
	 */

package BlackJack;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.*;
import java.io.*;

public class BlackJack {

	public static void main(String[] args) {
		
		class Card {
		    private String rank;
		    private String suit;

		    public Card(String rank, String suit) {
		        this.rank = rank;
		        this.suit = suit;
		    }

		    public int getValue() {
		        switch (rank) {
		            case "Ace":
		                return 11;
		            case "King":
		            case "Queen":
		            case "Jack":
		                return 10;
		            default:
		                return Integer.parseInt(rank);
		        }
		    }

		    public String toString() {
		        return rank + " of " + suit;
		    }
		}

//represents a deck
		class Deck {
		    private ArrayList<Card> cards;

		    public Deck() {
		        cards = new ArrayList<>();
		        initializeDeck();
		        shuffle();
		    }

		    private void initializeDeck() {
		        String[] ranks = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King", "Ace"};
		        String[] suits = {"Hearts", "Diamonds", "Clubs", "Spades"};

		        for (String suit : suits) {
		            for (String rank : ranks) {
		                cards.add(new Card(rank, suit));
		            }
		        }
		    }

		    public void shuffle() {
		        Collections.shuffle(cards);
		    }

		    public Card dealCard() {
		        if (cards.isEmpty()) {
		            initializeDeck();
		            shuffle();
		        }
		        return cards.remove(0);
		    }
		}

//represents the player's hand
		class Hand {
		    private ArrayList<Card> cards;

		    public Hand() {
		        cards = new ArrayList<>();
		    }

		    public void addCard(Card card) {
		        cards.add(card);
		    }

		    public int calculateScore() {
		        int score = 0;
		        int numAces = 0;

		        for (Card card : cards) {
		            score += card.getValue();
		            if (card.getValue() == 11) {
		                numAces++;
		            }
		        }

		        while (score > 21 && numAces > 0) {
		            score -= 10;
		            numAces--;
		        }

		        return score;
		    }

		    public void display() {
		        for (Card card : cards) {
		            System.out.println(card);
		        }
		    }
		}

//main class that controls the game
		class BlackjackGame {
		    private Deck deck;
		    private Hand playerHand;
		    private Hand dealerHand;

		    public BlackjackGame() {
		        deck = new Deck();
		        playerHand = new Hand();
		        dealerHand = new Hand();
		    }

		    public void playGame() {
//Start the game

//Deals starting cards
		        playerHand.addCard(deck.dealCard());
		        dealerHand.addCard(deck.dealCard());
		        playerHand.addCard(deck.dealCard());
		        dealerHand.addCard(deck.dealCard());

//Displays starting cards
		        System.out.println("Your hand:");
		        playerHand.display();
		        System.out.println("Your score: " + playerHand.calculateScore());
		        System.out.println("\nDealer's hand:");
		        System.out.println(dealerHand.display().get(0)); //Shows only the dealer's first card

//Continue the game
		        Scanner scanner = new Scanner(System.in);
		        while (true) {
//Requests player action
		            System.out.println("\nDo you want to hit or stand? (h/s)");
		            String choice = scanner.nextLine();

		            if (choice.equalsIgnoreCase("h")) {
//Plays a card to the player
		                playerHand.addCard(deck.dealCard());
		                System.out.println("\nYour hand:");
		                playerHand.display();
		                System.out.println("Your score: " + playerHand.calculateScore());

//Checks if the player has reached 21 points
		                if (playerHand.calculateScore() > 21) {
		                    System.out.println("Bust! You lose.");
		                    break;
		                }
		            } else if (choice.equalsIgnoreCase("s")) {
// Dealer plays until he reaches at least 17 points
		                while (dealerHand.calculateScore() < 17) {
		                    dealerHand.addCard(deck.dealCard());
		                }

// Displays final hands
		                System.out.println("\nYour hand:");
		                playerHand.display();
		                System.out.println("Your score: " + playerHand.calculateScore());
		                System.out.println("\nDealer's hand:");
		                dealerHand.display();
		                System.out.println("Dealer's score: " + dealerHand.calculateScore());

// Determine the winner
		                if (dealerHand.calculateScore() > 21 || playerHand.calculateScore() > dealerHand.calculateScore()) {
		                    System.out.println("Congratulations! You win!");
		                } else if (playerHand.calculateScore() == dealerHand.calculateScore()) {
		                    System.out.println("It's a tie!");
		                } else {
		                    System.out.println("Sorry, you lose.");
		                }
		                break;
		            } else {
		                System.out.println("Invalid choice. Please enter 'h' or 's'.");
		            }
		        }

		        scanner.close();
		    }

		    public static void main(String[] args) {
		        BlackjackGame game = new BlackjackGame();
		        game.playGame();
		    }
		}


	}

}
